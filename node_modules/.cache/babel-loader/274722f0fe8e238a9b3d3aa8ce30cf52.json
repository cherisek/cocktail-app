{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cheriseknox/cocktail-app/src/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('a');\n  const [cocktails, setCocktails] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(6);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(`${url}`);\n      setPosts(res.data);\n      setLoading(false);\n    };\n  });\n  const fetchDrinks = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      console.log(data);\n      const {\n        drinks\n      } = data;\n\n      if (drinks) {\n        const newCocktails = drinks.map(item => {\n          const {\n            idDrink,\n            strDrink,\n            strDrinkThumb,\n            strAlcoholic,\n            strGlass\n          } = item;\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass\n          };\n        });\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchDrinks();\n  }, [searchTerm, fetchDrinks]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      cocktails,\n      searchTerm,\n      setSearchTerm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"5poGE79K+0/jupYfhcjeJa+7RUo=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/Users/cheriseknox/cocktail-app/src/context.js"],"names":["React","useState","useContext","useEffect","useCallback","axios","url","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","posts","setPosts","currentPage","setCurrentPage","postPerPage","setPostPerPage","fetchPosts","res","get","data","fetchDrinks","response","fetch","json","console","log","drinks","newCocktails","map","item","idDrink","strDrink","strDrinkThumb","strAlcoholic","strGlass","id","name","image","info","glass","error","useGlobalContext"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('a');\n  const [cocktails, setCocktails] = useState([]); \n  const [posts, setPosts] = useState([]); \n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(6); \n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true); \n      const res = await axios.get(`${url}`); \n      setPosts(res.data); \n      setLoading(false);\n    }\n  })\n\n  const fetchDrinks = useCallback( async () => {\n    setLoading(true)\n    try {\n      const response = await fetch(`${url}${searchTerm}`)\n      const data = await response.json()\n      console.log(data);\n      const { drinks } = data;\n      if (drinks) {\n        const newCocktails = drinks.map((item) => {\n          const {\n            idDrink,\n            strDrink,\n            strDrinkThumb,\n            strAlcoholic,\n            strGlass,\n          } = item\n\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass,\n          }\n        })\n        setCocktails(newCocktails)\n      } else {\n        setCocktails([])\n      }\n      setLoading(false)\n    } catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n  },[searchTerm])\n  useEffect(() => {\n    fetchDrinks()\n  }, [searchTerm,fetchDrinks])\n  return (\n    <AppContext.Provider\n      value={{ loading, cocktails, searchTerm, setSearchTerm }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }"]},"metadata":{},"sourceType":"module"}